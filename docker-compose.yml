version: '3.9'

services:
  postgres:
    image: postgres:13.13-alpine
    command: postgres -c 'max_connections=500'
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '54321:5432'
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data/
    networks:
      - go-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  golang-migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
      args:
        - DB_DRIVER=${DB_DRIVER}
    command: ["migrate", "-path", "/migrations", "-database", "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable", "-verbose", "up"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - go-backend

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - APP_NAME=server
      - APP_VERSION=1.0.0
      - DB_DRIVER=${DB_DRIVER}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=disable
    depends_on:
      - postgres
    networks:
      - go-backend

volumes:
  postgres:

networks:
  go-backend:
    driver: bridge